
#include "Settings.hpp"
#include "DefaultSettings.hpp"
#include <string>

namespace Settings
{
    std::string INSTANCES_DIRECTORY_PATH = DEFAULT_INSTANCES_DIRECTORY_PATH;
    bool GENERATE_INSTANCES = DEFAULT_GENERATE_INSTANCES;
    size_t FIRST_INSTANCE_INDEX = DEFAULT_FIRST_INSTANCE_INDEX;
    size_t LAST_INSTANCE_INDEX = DEFAULT_LAST_INSTANCE_INDEX;
    std::string INSTANCE_NAME = DEFAULT_INSTANCE_NAME;

    namespace Generator
    {
        size_t NB_RESOURCES = DEFAULT_NB_RESOURCES;
        size_t MAX_RESOURCE_CAPACITY = DEFAULT_MAX_RESOURCE_CAPACITY;
        size_t MIN_RESOURCE_CAPACITY = DEFAULT_MIN_RESOURCE_CAPACITY;
        size_t NB_JOBS = DEFAULT_NB_JOBS;
        size_t MIN_NB_SUCCESSORS = DEFAULT_MIN_NB_SUCCESSORS;
        size_t MAX_NB_SUCCESSORS = DEFAULT_MAX_NB_SUCCESSORS;
        size_t MAX_NB_MODES = DEFAULT_MAX_NB_MODES;
        size_t MIN_NB_MODES = DEFAULT_MIN_NB_MODES;
        size_t MAX_EXECUTION_TIME = DEFAULT_MAX_EXECUTION_TIME;
        size_t MIN_EXECUTION_TIME = DEFAULT_MIN_EXECUTION_TIME;
        size_t MAX_NB_RESOURCE_UNITS_PER_JOB = DEFAULT_MAX_NB_RESOURCE_UNITS_PER_JOB;
        size_t MIN_NB_RESOURCE_UNITS_PER_JOB = DEFAULT_MIN_NB_RESOURCE_UNITS_PER_JOB;
    } // namespace Generator

    namespace Solver
    {
        std::string RESULTS_DIRECTORY = DEFAULT_RESULTS_DIRECTORY;
        bool VERBOSE = DEFAULT_VERBOSE;
        size_t NB_THREADS = DEFAULT_NB_THREADS;
        double MAX_RUNTIME = DEFAULT_MAX_RUNTIME;
        bool USE_GUROBI = DEFAULT_USE_GUROBI;
        bool USE_CPLEX = DEFAULT_USE_CPLEX;
        bool USE_CP = DEFAULT_USE_CP;
        bool CHECK_SOLUTION = DEFAULT_CHECK_SOLUTION;
        bool DRAW_GANTT_CHART = DEFAULT_DRAW_GANTT_CHART;

        /* ILP SOLVER OPTIONS */
        bool INIT_ILP_SOLUTION = DEFAULT_INIT_ILP_SOLUTION;
        double ILP_RELATIVE_GAP = DEFAULT_ILP_RELATIVE_GAP;
        bool INIT_SOLUTION = DEFAULT_INIT_SOLUTION;
    } // namespace Solver
} // namespace Settings
